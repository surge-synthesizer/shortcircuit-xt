name: Build Pull Request
on:
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  build_plugin:
    name: PR - ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: "windows msvc"
            os: windows-latest
            target: shortcircuit-products
            cmakeConfig: -G"Visual Studio 17 2022" -A x64 -DCMAKE_UNITY_BUILD=TRUE
            runTests: false
            clapValidate: false

            #- name: "windows clang VST3"
            #  os: windows-latest
            #  target: scxt_clapfirst_vst3
            # LLVM
            # cmakeConfig: -GNinja -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang
          #  cmakeConfig: -G"Visual Studio 17 2022" -A x64 -TClangCL
          #  runTests: false
          #  clapValidate: false

          - name: "windows arm64ec"
            os: windows-latest
            target: shortcircuit-products
            cmakeConfig: -G"Visual Studio 17 2022" -A arm64ec -DCMAKE_SYSTEM_VERSION=10 -DCMAKE_UNITY_BUILD=TRUE
            runTests: false
            clapValidate: false

          - name: "mac AU"
            os: macos-latest
            target: scxt_clapfirst_auv2
            cmakeConfig: -GNinja
            runTests: true
            clapValidate: false

          - name: "ubuntu Standalone"
            os: ubuntu-latest
            target: scxt_clapfirst_standalone
            cmakeConfig: -GNinja
            runTests: false
            clapValidate: false

          - name: "win unity"
            os: windows-latest
            target: shortcircuit-products
            # LLVM
            # cmakeConfig: -GNinja -DCMAKE_UNITY_BUILD=TRUE -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang
            # CLang CL
            # cmakeConfig: -G"Visual Studio 17 2022" -A x64 -TClangCL -DCMAKE_UNITY_BUILD=TRUE
            # MSVC
            cmakeConfig: -G"Visual Studio 17 2022" -A x64 -DCMAKE_UNITY_BUILD=TRUE
            runTests: false
            clapValidate: true

          - name: "mac unity"
            os: macos-latest
            target: shortcircuit-products
            cmakeConfig: -GNinja -DCMAKE_UNITY_BUILD=TRUE
            runTests: false
            clapValidate: true

          - name: "ubuntu unity"
            os: ubuntu-latest
            target: shortcircuit-products
            cmakeConfig: -GNinja -DCMAKE_UNITY_BUILD=TRUE
            runTests: false
            clapValidate: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Prepare for JUCE
        uses: surge-synthesizer/sst-githubactions/prepare-for-juce@main
        with:
          os: ${{ runner.os }}

      - name: Build pull request version
        run: |
          cmake -S . -B ./build ${{ matrix.cmakeConfig }} -DCMAKE_BUILD_TYPE=Debug 
          cmake --build ./build --config Debug --target ${{ matrix.target }} --parallel 4

      - name: Run Clap Validator
        if: ${{ matrix.clapValidate }}
        uses: jatinchowdhury18/clap-val-action@main
        with:
          plugin_path: "\"./build/shortcircuit-products/Shortcircuit XT.clap\""

      - name: Run Tests
        if: ${{ matrix.runTests }}
        run: |
          cmake --build build --config Debug --target scxt-test --parallel 4
          ./build/tests/scxt-test


  build_plugin_lindoc:
    name: PR - U20 Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build in Docker
        uses: surge-synthesizer/sst-githubactions/cmake-in-docker@main
        with:
          image: ghcr.io/surge-synthesizer/sst-dockerimages/ubuntu20_gcc11:main
          username: ${{ github.actor }}
          token: ${{ secrets.GITHUB_TOKEN }}
          cmakeArgs: -DCMAKE_BUILD_TYPE=Debug -GNinja
          target: shortcircuit-products

