#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This is the debhelper compatibility version to use.
export DH_COMPAT=9

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)


ifneq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -g
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

config.status: configure
	dh_testdir
	# Add here commands to configure the package.
	chmod a+x configure
	./configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info


build: build-stamp
build-stamp:  config.status
	dh_testdir

	# Add here commands to compile the package.
	$(MAKE)

	# the build should fail if the tests are not successful
	#$(MAKE) check

	# Wiping 'dependency_libs' fields from all .la files
	# (see https://wiki.debian.org/ReleaseGoals/LAFileRemoval for details).
	# This is a workaround to avoid unnecessary lib dependencies of
	# apps/libs that link against libgig. Note that this might require
	# manual adjustments to projects linking statically against libgig.
	sed -i "/dependency_libs/ s/'.*'/''/" `find . -name '*.la'` `find . -name '*.lai'`
	# rebuild of gigtools is required to get rid of their unnecessary lib dependencies as well
	( cd src/tools && $(MAKE) clean )
	# explicitly remove "-luuid" occurrences from src/tools/Makefile
	sed -i "s/-luuid//" src/tools/Makefile
	# now rebuild gigtools
	$(MAKE)

	# generate Doxygen API documentation
	$(MAKE) docs

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp

	$(MAKE) -f Makefile.svn || true
	chmod a+x configure
	./configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info


	# Add here commands to clean up after the build process.
	-$(MAKE) distclean

	dh_clean -a

install: build
	dh_testdir
	dh_testroot
	dh_clean -k -a
	dh_installdirs

	# Add here commands to install the package into debian/tmp
	$(MAKE) install DESTDIR=$(CURDIR)/debian/tmp
	mkdir -p debian/tmp/etc/ld.so.conf.d
	echo /usr/lib/libgig > debian/tmp/etc/ld.so.conf.d/libgig.conf

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_install -a --list-missing
	dh_installchangelogs -a ChangeLog
	dh_installdocs -a
#	dh_installexamples
#	dh_installmenu
#	dh_installdebconf
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
#	dh_strip -a
	dh_compress -a
	dh_fixperms -a
#	dh_perl
#	dh_python
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
